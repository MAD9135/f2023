(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{518:function(e,t,a){e.exports=a.p+"assets/img/react-tools-1.d2136917.png"},519:function(e,t,a){e.exports=a.p+"assets/img/react-dev-tools.0bfbe112.png"},520:function(e,t,a){e.exports=a.p+"assets/img/rn-env-check.925c71ce.png"},574:function(e,t,a){"use strict";a.r(t);var s=a(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("PageHeader"),e._v(" "),s("h2",{attrs:{id:"linked-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linked-in"}},[e._v("#")]),e._v(" Linked In")]),e._v(" "),s("ul",[s("li",[e._v("We have a private LinkedIn Group for graduates of the program")]),e._v(" "),s("li",[e._v("Everyone who makes it to the MAD9145 Applied Project course will be invited to join this group.")]),e._v(" "),s("li",[e._v("This is where we post contracts and jobs for graduates.")]),e._v(" "),s("li",[e._v("It is also a place where you can post jobs or look for partners for ventures of your own.")]),e._v(" "),s("li",[e._v("You can use it to connect with your classmates or with former Alumni of the program.")]),e._v(" "),s("li",[e._v("If you do NOT have a Linked In profile yet, please create one today.")]),e._v(" "),s("li",[e._v("Send a connection request to "),s("a",{attrs:{href:"https://www.linkedin.com/in/steve-griffith/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Steve on Linked In"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("li",[e._v("After he accepts all the invitations he will invite you to the group.")])]),e._v(" "),s("h2",{attrs:{id:"debugging-react-native-apps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debugging-react-native-apps"}},[e._v("#")]),e._v(" Debugging React Native Apps")]),e._v(" "),s("p",[e._v("React Native switched from the JavaScriptCore JS Engine to the Hermes Engine in 2022. This has led to much better performance with React Native Apps.")]),e._v(" "),s("p",[e._v("In 2023 Expo switched to using this new JS Engine too.")]),e._v(" "),s("p",[e._v("While this means better performance and smaller app sizes, it has meant that there have been fewer Development and Debugging tools in the short term.")]),e._v(" "),s("p",[e._v("Currently, if you have a React Native app running through the "),s("code",[e._v("Expo Go")]),e._v(" app you can open the developer menu and select the "),s("code",[e._v("JS Debugger")]),e._v(". This will open a standalone copy of the Chrome Dev Tools and\nlet you use those tools to see JS errors, console.log statements, and monitor the Network requests.")]),e._v(" "),s("p",[e._v("A better choice for debugging is to install the "),s("code",[e._v("Expo Tools")]),e._v(" and "),s("code",[e._v("React Native Tools")]),e._v(" extensions in "),s("code",[e._v("VS Code")]),e._v(". Once those are installed you can start using any of the commands from the Command Palette\nin VS Code.")]),e._v(" "),s("p",[e._v("Open the Command Palette with "),s("code",[e._v("Command + Shift + P")]),e._v(". Then type "),s("code",[e._v('"React Native"')]),e._v(" to see the list of possible commands.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(518),alt:"Command Palette for React Dev Tools"}})]),e._v(" "),s("p",[e._v("Run the "),s("code",[e._v("check development environment config")]),e._v(" command as shown in the image above. This will test your computer for Android and iOS configuration requirements.")]),e._v(" "),s("p",[e._v("To launch the new React Dev Tools for your app we need to set up one more thing.")]),e._v(" "),s("p",[e._v("Open the "),s("code",[e._v("Run and Debug")]),e._v(" panel by clicking the button above the extensions button that looks like a play button with a bug on it.")]),e._v(" "),s("p",[e._v("First, close any project files that are currently open. Then in the "),s("code",[e._v("Run and Debug")]),e._v(" panel click on the link to create a "),s("code",[e._v("launch.json")]),e._v(" file. (It will create a "),s("code",[e._v(".vscode")]),e._v(" folder with a "),s("code",[e._v("launch.json")]),e._v(" file\ninside that folder). In the first menu that appears you should see a list of choices that includes "),s("code",[e._v("React Native")]),e._v(". Select the "),s("code",[e._v("React Native")]),e._v(" option.")]),e._v(" "),s("p",[e._v("In the second menu we need to select ONLY the two options:")]),e._v(" "),s("ul",[s("li",[e._v("Debug Android Hermes")]),e._v(" "),s("li",[e._v("Debug iOS Hermes")])]),e._v(" "),s("p",[e._v("Now you should have a "),s("code",[e._v("launch.json")]),e._v(" file with the settings and support for these debuggers.")]),e._v(" "),s("p",[e._v("Now you can start your React Native app from the Terminal with "),s("code",[e._v("npm run start")]),e._v(". Then launch your iOS or Android app with the "),s("code",[e._v("i")]),e._v(" or "),s("code",[e._v("a")]),e._v(" keys.")]),e._v(" "),s("p",[e._v("Once your app is running you can use "),s("code",[e._v("Shift + m")]),e._v(" to see the additonal tools list. Select "),s("code",[e._v("React Dev Tools")]),e._v(" from the list and it will open a Chrome Dev Tools window with a searchable display of all\ncomponents and their properties.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(519),alt:"React Dev Tools"}})]),e._v(" "),s("p",[s("a",{attrs:{href:"https://docs.expo.dev/debugging/tools/#debugging-with-react-devtools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo reference for debugging"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"more-about-react-native-builds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#more-about-react-native-builds"}},[e._v("#")]),e._v(" More about React Native Builds")]),e._v(" "),s("p",[e._v("Once you have run the Command Palette "),s("code",[e._v("React Native: Check development environment configuration")]),e._v(" command. It will look at all the required tech for android and ios apps. When complete, you should see\na list with checkmarks beside each item like the image below.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(520),alt:"Environment Check Results"}})]),e._v(" "),s("p",[e._v("If you are missing "),s("code",[e._v("watchman")]),e._v(" or "),s("code",[e._v("ios-deploy")]),e._v(" or "),s("code",[e._v("gradle")]),e._v(" you can use HomeBrew to install them.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("brew "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" watchman\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" ios-deploy\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" gradle\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("If Android ENV is missing, it means that you need to create a new Environment variable called "),s("code",[e._v("ANDROID_SDK_ROOT")]),e._v(" set to the location of your android sdk. This should be done inside your "),s("code",[e._v(".zshrc")]),e._v(" file\nfrom your user home folder. "),s("code",[e._v("/Users/<yourusername>/.zshrc")]),e._v(".")]),e._v(" "),s("p",[e._v("As an example, this is what the first two lines of my "),s("code",[e._v(".zshrc")]),e._v(" file looks like.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ANDROID_SDK_ROOT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/Library/Android/sdk\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("If you have "),s("code",[e._v("x")]),e._v("s beside the ADB and Emulator items, then you need to update your PATH variable.")]),e._v(" "),s("p",[e._v("You can have as many lines as you want in your "),s("code",[e._v(".zshrc")]),e._v(" file that start with "),s("code",[e._v("export PATH=")]),e._v(". Each one will be adding a new string path for some application to the full "),s("code",[e._v("PATH")]),e._v(" string.")]),e._v(" "),s("p",[e._v("Usually all the path values are put together in a single line. You can split them into multiple lines if you want as long as each line starts with "),s("code",[e._v("export PATH=")]),e._v(". Every line should also include\n"),s("code",[e._v("$PATH")]),e._v(" (the current value of the PATH variable) at the start or end.")]),e._v(" "),s("p",[e._v("Between each of the parts of the path you need to have a "),s("code",[e._v(":")]),e._v(".")]),e._v(" "),s("p",[e._v("The three new parts that we need to add are all folders inside the Android sdk folder.")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("emulator")])]),e._v(" "),s("li",[s("code",[e._v("platform-tools")])]),e._v(" "),s("li",[s("code",[e._v("tools/bin")])])]),e._v(" "),s("p",[e._v("So, you can write it either if these two ways.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/.npm-packages/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/emulator:"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/platform-tools:"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/tools/bin\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("or")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/.npm-packages/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/emulator:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/platform-tools:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/tools/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("Once you have all these installed (you will have to restart VS Code) re-run the Command Palette React Native: check command to confirm that you have everything ready.")]),e._v(" "),s("p",[e._v("Now, we can actually create the android and ios native apps to install outside of Expo Go. Run this command to create the "),s("code",[e._v("android")]),e._v(" and "),s("code",[e._v("ios")]),e._v(" folders and do the initial builds for your app.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("npx expo prebuild --clean\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://docs.expo.dev/workflow/prebuild/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo Prebuild reference"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("This will create both the android and ios apps. The first time you run this, it will take a few minutes for the gradle and cocoapods parts to run.")]),e._v(" "),s("p",[e._v("Then to launch the apps we run both these commands separately.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("npx expo run:android\nnpx expo run:ios\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);